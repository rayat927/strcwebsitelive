{"ast":null,"code":"import { ErrorFactory, contains, deepExtend, createSubscribe, isBrowser } from '@firebase/util';\nimport { Component } from '@firebase/component';\nimport * as modularAPIs from '@firebase/app';\nimport { _addComponent, deleteApp, _DEFAULT_ENTRY_NAME, _addOrOverwriteComponent, registerVersion } from '@firebase/app';\nimport { Logger } from '@firebase/logger';\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n *\r\n * marked as internal because it references internal types exported from @firebase/app\r\n * @internal\r\n */\n\nclass FirebaseAppImpl {\n  constructor(_delegate, firebase) {\n    this._delegate = _delegate;\n    this.firebase = firebase; // add itself to container\n\n    _addComponent(_delegate, new Component('app-compat', () => this, \"PUBLIC\"\n    /* PUBLIC */\n    ));\n\n    this.container = _delegate.container;\n  }\n\n  get automaticDataCollectionEnabled() {\n    return this._delegate.automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this._delegate.automaticDataCollectionEnabled = val;\n  }\n\n  get name() {\n    return this._delegate.name;\n  }\n\n  get options() {\n    return this._delegate.options;\n  }\n\n  delete() {\n    return new Promise(resolve => {\n      this._delegate.checkDestroyed();\n\n      resolve();\n    }).then(() => {\n      this.firebase.INTERNAL.removeApp(this.name);\n      return deleteApp(this._delegate);\n    });\n  }\n  /**\r\n   * Return a service instance associated with this app (creating it\r\n   * on demand), identified by the passed instanceIdentifier.\r\n   *\r\n   * NOTE: Currently storage and functions are the only ones that are leveraging this\r\n   * functionality. They invoke it by calling:\r\n   *\r\n   * ```javascript\r\n   * firebase.app().storage('STORAGE BUCKET ID')\r\n   * ```\r\n   *\r\n   * The service name is passed to this already\r\n   * @internal\r\n   */\n\n\n  _getService(name) {\n    let instanceIdentifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _DEFAULT_ENTRY_NAME;\n\n    var _a;\n\n    this._delegate.checkDestroyed(); // Initialize instance if InstatiationMode is `EXPLICIT`.\n\n\n    const provider = this._delegate.container.getProvider(name);\n\n    if (!provider.isInitialized() && ((_a = provider.getComponent()) === null || _a === void 0 ? void 0 : _a.instantiationMode) === \"EXPLICIT\"\n    /* EXPLICIT */\n    ) {\n      provider.initialize();\n    } // getImmediate will always succeed because _getService is only called for registered components.\n\n\n    return provider.getImmediate({\n      identifier: instanceIdentifier\n    });\n  }\n  /**\r\n   * Remove a service instance from the cache, so we will create a new instance for this service\r\n   * when people try to get it again.\r\n   *\r\n   * NOTE: currently only firestore uses this functionality to support firestore shutdown.\r\n   *\r\n   * @param name The service name\r\n   * @param instanceIdentifier instance identifier in case multiple instances are allowed\r\n   * @internal\r\n   */\n\n\n  _removeServiceInstance(name) {\n    let instanceIdentifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _DEFAULT_ENTRY_NAME;\n\n    this._delegate.container // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    .getProvider(name).clearInstance(instanceIdentifier);\n  }\n  /**\r\n   * @param component the component being added to this app's container\r\n   * @internal\r\n   */\n\n\n  _addComponent(component) {\n    _addComponent(this._delegate, component);\n  }\n\n  _addOrOverwriteComponent(component) {\n    _addOrOverwriteComponent(this._delegate, component);\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\n      options: this.options\n    };\n  }\n\n} // TODO: investigate why the following needs to be commented out\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n//   FirebaseAppImpl.prototype.delete ||\n//   console.log('dc');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst ERRORS = {\n  [\"no-app\"\n  /* NO_APP */\n  ]: \"No Firebase App '{$appName}' has been created - \" + 'call Firebase App.initializeApp()',\n  [\"invalid-app-argument\"\n  /* INVALID_APP_ARGUMENT */\n  ]: 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.'\n};\nconst ERROR_FACTORY = new ErrorFactory('app-compat', 'Firebase', ERRORS);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Because auth can't share code with other components, we attach the utility functions\r\n * in an internal namespace to share code.\r\n * This function return a firebase namespace object without\r\n * any utility functions, so it can be shared between the regular firebaseNamespace and\r\n * the lite version.\r\n */\n\nfunction createFirebaseNamespaceCore(firebaseAppImpl) {\n  const apps = {}; // // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // const components = new Map<string, Component<any>>();\n  // A namespace is a plain JavaScript Object.\n\n  const namespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp: initializeAppCompat,\n    // @ts-ignore\n    app,\n    registerVersion: modularAPIs.registerVersion,\n    setLogLevel: modularAPIs.setLogLevel,\n    onLog: modularAPIs.onLog,\n    // @ts-ignore\n    apps: null,\n    SDK_VERSION: modularAPIs.SDK_VERSION,\n    INTERNAL: {\n      registerComponent: registerComponentCompat,\n      removeApp,\n      useAsService,\n      modularAPIs\n    }\n  }; // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  namespace['default'] = namespace; // firebase.apps is a read-only getter.\n\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n  /**\r\n   * Called by App.delete() - but before any services associated with the App\r\n   * are deleted.\r\n   */\n\n  function removeApp(name) {\n    delete apps[name];\n  }\n  /**\r\n   * Get the App object for a given name (or DEFAULT).\r\n   */\n\n\n  function app(name) {\n    name = name || modularAPIs._DEFAULT_ENTRY_NAME;\n\n    if (!contains(apps, name)) {\n      throw ERROR_FACTORY.create(\"no-app\"\n      /* NO_APP */\n      , {\n        appName: name\n      });\n    }\n\n    return apps[name];\n  } // @ts-ignore\n\n\n  app['App'] = firebaseAppImpl;\n  /**\r\n   * Create a new App instance (name must be unique).\r\n   *\r\n   * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\r\n   */\n\n  function initializeAppCompat(options) {\n    let rawConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const app = modularAPIs.initializeApp(options, rawConfig);\n\n    if (contains(apps, app.name)) {\n      return apps[app.name];\n    }\n\n    const appCompat = new firebaseAppImpl(app, namespace);\n    apps[app.name] = appCompat;\n    return appCompat;\n  }\n  /*\r\n   * Return an array of all the non-deleted FirebaseApps.\r\n   */\n\n\n  function getApps() {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(name => apps[name]);\n  }\n\n  function registerComponentCompat(component) {\n    const componentName = component.name;\n    const componentNameWithoutCompat = componentName.replace('-compat', '');\n\n    if (modularAPIs._registerComponent(component) && component.type === \"PUBLIC\"\n    /* PUBLIC */\n    ) {\n      // create service namespace for public components\n      // The Service namespace is an accessor function ...\n      const serviceNamespace = function () {\n        let appArg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : app();\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (typeof appArg[componentNameWithoutCompat] !== 'function') {\n          // Invalid argument.\n          // This happens in the following case: firebase.storage('gs:/')\n          throw ERROR_FACTORY.create(\"invalid-app-argument\"\n          /* INVALID_APP_ARGUMENT */\n          , {\n            appName: componentName\n          });\n        } // Forward service instance lookup to the FirebaseApp.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n        return appArg[componentNameWithoutCompat]();\n      }; // ... and a container for service-level properties.\n\n\n      if (component.serviceProps !== undefined) {\n        deepExtend(serviceNamespace, component.serviceProps);\n      } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      namespace[componentNameWithoutCompat] = serviceNamespace; // Patch the FirebaseAppImpl prototype\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      firebaseAppImpl.prototype[componentNameWithoutCompat] = // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\n      // option added to the no-explicit-any rule when ESlint releases it.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      function () {\n        const serviceFxn = this._getService.bind(this, componentName);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return serviceFxn.apply(this, component.multipleInstances ? args : []);\n      };\n    }\n\n    return component.type === \"PUBLIC\"\n    /* PUBLIC */\n    ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    namespace[componentNameWithoutCompat] : null;\n  } // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n\n\n  function useAsService(app, name) {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    const useService = name;\n    return useService;\n  }\n\n  return namespace;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\n\n\nfunction createFirebaseNamespace() {\n  const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\n  namespace.INTERNAL = Object.assign(Object.assign({}, namespace.INTERNAL), {\n    createFirebaseNamespace,\n    extendNamespace,\n    createSubscribe,\n    ErrorFactory,\n    deepExtend\n  });\n  /**\r\n   * Patch the top-level firebase namespace with additional properties.\r\n   *\r\n   * firebase.INTERNAL.extendNamespace()\r\n   */\n\n  function extendNamespace(props) {\n    deepExtend(namespace, props);\n  }\n\n  return namespace;\n}\n\nconst firebase$1 = createFirebaseNamespace();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nconst logger = new Logger('@firebase/app-compat');\nconst name = \"@firebase/app-compat\";\nconst version = \"0.1.17\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction registerCoreComponents(variant) {\n  // Register `app` package.\n  registerVersion(name, version, variant);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Firebase Lite detection\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nif (isBrowser() && self.firebase !== undefined) {\n  logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `); // eslint-disable-next-line\n\n  const sdkVersion = self.firebase.SDK_VERSION;\n\n  if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\n    logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\n  }\n}\n\nconst firebase = firebase$1;\nregisterCoreComponents();\nexport { firebase as default };","map":{"version":3,"mappings":"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","names":["FirebaseAppImpl","constructor","_delegate","firebase","_addComponent","Component","container","automaticDataCollectionEnabled","val","name","options","delete","Promise","resolve","checkDestroyed","then","INTERNAL","removeApp","deleteApp","_getService","instanceIdentifier","_DEFAULT_ENTRY_NAME","provider","getProvider","isInitialized","getComponent","_a","instantiationMode","initialize","getImmediate","identifier","_removeServiceInstance","clearInstance","component","_addOrOverwriteComponent","toJSON","ERRORS","ERROR_FACTORY","ErrorFactory","createFirebaseNamespaceCore","firebaseAppImpl","apps","namespace","__esModule","initializeApp","initializeAppCompat","app","registerVersion","modularAPIs","setLogLevel","onLog","SDK_VERSION","registerComponent","registerComponentCompat","useAsService","Object","defineProperty","get","getApps","contains","create","appName","rawConfig","appCompat","keys","map","componentName","componentNameWithoutCompat","replace","_registerComponent","type","serviceNamespace","appArg","serviceProps","undefined","deepExtend","prototype","serviceFxn","bind","args","apply","multipleInstances","useService","createFirebaseNamespace","extendNamespace","createSubscribe","props","logger","Logger","registerCoreComponents","variant","version","isBrowser","self","warn","sdkVersion","indexOf","firebaseNamespace"],"sources":["."],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from './public-types';\nimport { isBrowser } from '@firebase/util';\nimport { firebase as firebaseNamespace } from './firebaseNamespace';\nimport { logger } from './logger';\nimport { registerCoreComponents } from './registerCoreComponents';\n\n// Firebase Lite detection\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nif (isBrowser() && (self as any).firebase !== undefined) {\n  logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\n\n  // eslint-disable-next-line\n  const sdkVersion = ((self as any).firebase as FirebaseNamespace).SDK_VERSION;\n  if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\n    logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\n  }\n}\n\nconst firebase = firebaseNamespace;\n\nregisterCoreComponents();\n\n// eslint-disable-next-line import/no-default-export\nexport default firebase;\n\nexport { _FirebaseNamespace, _FirebaseService } from './types';\nexport { FirebaseApp, FirebaseNamespace } from './public-types';\n"]},"metadata":{},"sourceType":"module"}